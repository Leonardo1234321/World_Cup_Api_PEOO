{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TRABALHO DE PEOO","text":"<p>Apresenta\u00e7\u00e3o das quest\u00f5es 3 e 5  </p> <p></p> <p>GRUPO: LEONARDO, ARTHUR, LETICIA, GABRIEL GON\u00c7ALVES</p>"},{"location":"q3/","title":"RESOLU\u00c7\u00c3O DA QUEST\u00c3O 3","text":"<p>3. Fazer uma requisi\u00e7\u00e3o para a API e exibir todos os jogos de uma equipe espec\u00edfica.</p>"},{"location":"q3/#criacao-do-aba-de-selecao-de-um-time","title":"Cria\u00e7\u00e3o do aba de sele\u00e7\u00e3o de um time","text":"<p>Primeiro, definimos uma marca select no documento html onde ser\u00e3o colocados as op\u00e7\u00f5es:</p> <pre><code>&lt;select id=\"equipe\" onchange=\"buscarJogos()\"&gt;\n        &lt;option value=\"\"&gt;Selecione um time...&lt;/option&gt;\n</code></pre> <p>Em seguida, a parte do script onde ser\u00e1 colocado as op\u00e7\u00f5es, para isso foi necess\u00e1rio fazer uma requisi\u00e7\u00e3o <code>GET</code> da API com os times.</p> <pre><code>const url_teams = 'https://worldcupjson.net/teams' //URL dos times\n\nfetch(url_teams) //Pegar as info da URL Times\n    .then(response =&gt; response.json())\n    .then(teams =&gt; todostimes(teams))\n\nfunction todostimes(teams){\n\n    let equipes = document.getElementById('equipe') \n\n    for (let team of teams['groups']){ //Percorrer a lista\n\n        for (let country of team.teams){ //Percorrer a lista dentro da lista para pegar o nomes dos times\n\n                let op\u00e7\u00e3o = new Option(country.name, country.name) //adicionar op\u00e7\u00e3o\n                console.log(country.name)\n                equipes.options[equipes.options.length] = op\u00e7\u00e3o\n        }\n    }\n}\n</code></pre> <pre><code>flowchart LR\n    API --&gt; id1(Fetch API)\n    id1 --&gt; __todostimes__\n    __todostimes__ --&gt; id2(op\u00e7\u00f5es no select)</code></pre> <p>Detalhe importante: Na linha 17, usa-se uma atribui\u00e7\u00e3o direta no options, o m\u00e9todo push n\u00e3o \u00e9 poss\u00edvel, pois o <code>select.options</code> \u00e9 um prototype HTMLOptionsCollection  e n\u00e3o um Prototype Array. Outra solu\u00e7\u00e3o poss\u00edvel \u00e9 usar o m\u00e9todo add, inerente aos Objects.  </p>"},{"location":"q3/#exibicao-dos-jogos","title":"Exibi\u00e7\u00e3o dos jogos","text":"<p>Depois de criarmos a tabela de sele\u00e7\u00e3o e suas op\u00e7\u00f5es (times), criamos uma fun\u00e7\u00e3o que exibe o jogo na p\u00e1gina HTML, sua execu\u00e7\u00e3o depende da propriedade <code>onchange</code> do Select.</p> <pre><code>function buscarJogos() { //fun\u00e7\u00e3o de mostrar os jogos\n\n    const nomeEquipe = document.getElementById('equipe').value //nome da equipe\n\n    console.log(nomeEquipe) //consolelog\n\n    if (!nomeEquipe) { //em caso de erro\n        document.getElementById('resultado').innerHTML = '&lt;p class=\"error\"&gt;Por favor, selecione uma equipe.&lt;/p&gt;';\n        return;\n    }\n</code></pre> <p>Dentro da fun\u00e7\u00e3o, fazemos mais duas requisi\u00e7\u00f5es, a primeira das bandeiras e a segunda com todas as partidas.</p> <pre><code>const url_jogos = 'https://worldcupjson.net/matches'; //URL dos jogos\nconst arq_bandeiras = 'flags.json' //arquivo json das bandeiras\n    fetch(arq_bandeiras)//pegar foto das bandeiras do json        \n    .then(response =&gt; response.json())\n    .then(data =&gt; {\n        const bandeiraUrl = data[nomeEquipe]; //pegar a bandeira de acordo com o nome da equipe\n        if (bandeiraUrl) {\n            document.getElementById('flag').src = bandeiraUrl;\n        } else {\n            document.getElementById('flag').src = ''; // Limpa a imagem se a equipe n\u00e3o for encontrada\n            alert('Bandeira n\u00e3o encontrada para a equipe especificada.');\n        }\n    })\n\n    fetch(url_jogos) //pegar info dos jogos\n        .then(response =&gt; response.json())\n        .then(data =&gt; {\n            const jogosEquipe = data.filter(jogo =&gt; { //pegar jogos que foram jogados em casa ou fora de casa do time\n                return jogo.home_team.name.toLowerCase().includes(nomeEquipe.toLowerCase()) || jogo.away_team.name.toLowerCase().includes(nomeEquipe.toLowerCase());\n            })\n</code></pre> <p>O data.filter, como o pr\u00f3prio nome diz, filtra os dados com base no nome da equipe selecionada.</p> <p>Em seguida o cria-se a string de marca\u00e7\u00e3o HTML com informa\u00e7\u00f5es das partidas de um time espec\u00edfico e s\u00e3o juntadas pelo <code>.join()</code> depois, s\u00e3o atribu\u00eddas ao documento HTML.</p> <pre><code>const result = jogosEquipe.map(jogo =&gt; { //percorre as info dos jogos e coloca em result\n    return `\n    &lt;div&gt;\n        Data: ${new Date(jogo.datetime).toLocaleString('pt-BR')} &lt;/br&gt;\n        Data: ${jogo.datetime} &lt;/br&gt;\n        Disputa: ${jogo.home_team.name} x ${jogo.away_team.name} &lt;/br&gt;\n        Placar: ${jogo.home_team.goals} - ${jogo.away_team.goals} &lt;/br&gt;\n        Penaltis: ${jogo.home_team.penalties} - ${jogo.away_team.penalties} &lt;/br&gt;\n        Vencedor: ${jogo.winner} &lt;/br&gt;\n        Localiza\u00e7\u00e3o: ${jogo.location} &lt;/br&gt;\n        Est\u00e1dio: ${jogo.venue} &lt;/br&gt;\n    &lt;/div&gt;\n    `\n    }).join(''); //adicionar \n\n    console.log(result)\n\n    document.getElementById('resultado').innerHTML = result //colocar o result no result do html\n    \n})\n</code></pre>"},{"location":"q5/","title":"QUEST\u00c3O 5","text":"<p>Fazer uma requisi\u00e7\u00e3o para a API e exibir o resultado final da Copa do Mundo, incluindo o campe\u00e3o e o vice-campe\u00e3o.</p>"},{"location":"q5/#requisitando-os-dados-da-api","title":"Requisitando os dados da API","text":"<p>Come\u00e7amos o c\u00f3digo de JAVASCRIPT com a fun\u00e7\u00e3o que o bot\u00e3o do HTML vai chamar e a vari\u00e1vel que vai conter o site que utilizamos.  </p> <pre><code>function resultado() {...code}\n</code></pre> <p>Fazemos um fetch para requisitar os dados da url, convertemos para jason e colocamos as informa\u00e7\u00f5es da \u00faltima partida na fun\u00e7\u00e3o \u201cshowfinal\u201d.  </p> <pre><code>fetch (url) \n.then (response =&gt; response.json())  \n.then (data =&gt; showfinal(data.at(-1))) \n.catch(error =&gt; console.error('Erro ao buscar dados:', error)); // trata erros \n</code></pre> <pre><code>flowchart LR\n    API --&gt; fetch\n    fetch --&gt; dados.json\n    dados.json --&gt; Objeto_final\n    Objeto_final --&gt; id1(Exibir as informa\u00e7\u00f5es)</code></pre>"},{"location":"q5/#funcao-que-exibe-os-dados-na-pagina","title":"Fun\u00e7\u00e3o que exibe os dados na p\u00e1gina","text":"<p>A fun\u00e7\u00e3o showfinal agora vai utilizar a \u201cdata\u201d por\u00e9m com outro nome, \u201cmatches\u201d (utiliza\u00e7\u00e3o de par\u00e2metros).  </p> <pre><code>function showfinal(match) {...code}\n</code></pre> <p>Criamos uma vari\u00e1vel para pegar o id listapost, este sendo o espa\u00e7o que vamos exibir os dados no html, e confirmamos que ele est\u00e1 limpo.  </p> <pre><code>const ListaPost = document.getElementById('listapost');\nListaPost.innerHTML = '';\n</code></pre> <p>Criamos uma vari\u00e1vel para converter a string em um objeto date.  </p> <pre><code>const datetime = new Date(match.datetime)\n</code></pre> <p>Criamos uma vari\u00e1vel que armazena a cria\u00e7\u00e3o de uma DIV no HTML que ter\u00e1 os detalhes da partida.  </p> <pre><code>const post = document.createElement('div')\n</code></pre> <p>Foi criada uma formata\u00e7\u00e3o padr\u00e3o para todos os posts no HTML, e com o classname \u00e9 poss\u00edvel que todos os elementos post fiquem com esse design.  </p> <pre><code>post.className = 'post'\n</code></pre> <p>Por fim, definimos todo o conte\u00fado do HTML na DIV criada, uma boa parte organizada em tabelas linhas e c\u00e9lulas e anexamos a DIV de classe 'post' e seu conte\u00fado ao elemento LISTAPOST.  </p> <pre><code>post.innerHTML = `\n        &lt;h2&gt;Campe\u00e3o: ${match.winner}&lt;/h2&gt; &lt;!-- Exibe o campe\u00e3o --&gt;\n        &lt;h2&gt; Vice Campe\u00e3o: ${match.away_team.name}&lt;/h2&gt; &lt;!-- Exibe o vice campe\u00e3o --&gt;\n        &lt;h3&gt;Detalhes da \u00daltima Partida:&lt;/h3&gt; \n        &lt;p&gt;Data: ${datetime.toLocaleDateString()}&lt;/p&gt; &lt;!-- Exibe a data da partida --&gt;\n        &lt;p&gt;Hora: ${datetime.toLocaleTimeString()}&lt;/p&gt; &lt;!-- Exibe o hor\u00e1rio da partida --&gt;\n        &lt;p&gt;Localiza\u00e7\u00e3o: Est\u00e1dio ${match.venue} em ${match.location}&lt;/p&gt;&lt;br&gt; &lt;!-- Exibe a localiza\u00e7\u00e3o da partida --&gt;\n        &lt;h3&gt;Gols e Penalidades:&lt;/h3&gt;\n                &lt;table&gt; &lt;!-- Inicio da tabela --&gt;\n                    &lt;caption&gt;Resumo dos Times&lt;/caption&gt; &lt;!-- Titulo da tabela --&gt;\n                    &lt;thead&gt; &lt;!-- Cabe\u00e7alho da tabela --&gt;\n                        &lt;tr&gt;\n                            &lt;th&gt;Equipe&lt;/th&gt; &lt;!-- Coluna --&gt;\n                            &lt;th&gt;Gols&lt;/th&gt;\n                            &lt;th&gt;Penalidades&lt;/th&gt;\n                        &lt;/tr&gt; &lt;!-- Linha --&gt;\n                    &lt;/thead&gt;\n                    &lt;tbody&gt; &lt;!-- Corpo da tabela --&gt;\n                        &lt;tr&gt;\n                            &lt;td&gt;&lt;img src= \"https://flagpedia.net/data/flags/h80/ar.png\" alt=\"${match.home_team.country}\" class=\"flag\"&gt; ${match.home_team.name}&lt;/td&gt;\n                            &lt;td&gt;${match.home_team.goals}&lt;/td&gt; &lt;!-- Conte\u00fado do elemento da coluna (c\u00e9lula) --&gt;\n                            &lt;td&gt;${match.home_team.penalties}&lt;/td&gt;\n                        &lt;/tr&gt;\n                        &lt;tr&gt;\n                            &lt;td&gt;&lt;img src=\"https://flagpedia.net/data/flags/h80/fr.png\" alt=\"${match.away_team.country}\" class=\"flag\"&gt; ${match.away_team.name}&lt;/td&gt;\n                            &lt;td&gt;${match.away_team.goals}&lt;/td&gt;\n                            &lt;td&gt;${match.away_team.penalties}&lt;/td&gt;\n                        &lt;/tr&gt;\n                        &lt;tr&gt;\n                            &lt;td&gt;&lt;strong&gt;Resultado Final&lt;/strong&gt;&lt;/td&gt;\n                            &lt;td&gt;${match.home_team.goals} - ${match.away_team.goals}&lt;/td&gt;\n                            &lt;td&gt;${match.home_team.penalties} - ${match.away_team.penalties}&lt;/td&gt;\n                        &lt;/tr&gt;\n                    &lt;/tbody&gt; &lt;!-- Finaliza o corpo da tabela --&gt;\n                &lt;/table&gt; &lt;!-- Finaliza a tabela --&gt;\n        &lt;p&gt;P\u00fablico: ${match.attendance} pessoas&lt;/p&gt;\n        `\n\n        ListaPost.appendChild(post);\n</code></pre>"}]}